<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aizuda.easy.retry.template.datasource.persistence.mapper.ServerNodeMapper">
    <resultMap id="BaseResultMap" type="com.aizuda.easy.retry.template.datasource.persistence.po.ServerNode">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="host_id" jdbcType="VARCHAR" property="hostId"/>
        <result column="host_ip" jdbcType="VARCHAR" property="hostIp"/>
        <result column="host_port" jdbcType="INTEGER" property="hostPort"/>
        <result column="expire_at" jdbcType="TIMESTAMP" property="expireAt"/>
        <result column="node_type" jdbcType="TINYINT" property="nodeType"/>
        <result column="context_path" jdbcType="VARCHAR" property="contextPath"/>
        <result column="ext_attrs" jdbcType="VARCHAR" property="extAttrs"/>
        <result column="create_dt" jdbcType="TIMESTAMP" property="createDt"/>
        <result column="update_dt" jdbcType="TIMESTAMP" property="updateDt"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, group_name, context_path, host_id, host_ip, host_port, expire_at, node_type,create_dt,update_dt
    </sql>
    <insert id="insertOrUpdate" parameterType="com.aizuda.easy.retry.template.datasource.persistence.po.ServerNode"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO server_node (namespace_id, group_name, host_id, host_ip, host_port,
                                 expire_at, node_type, ext_attrs, context_path, create_dt)
        VALUES
        <foreach collection="records" item="item" index="index" separator=",">
            (#{item.namespaceId,jdbcType=VARCHAR}, #{item.groupName,jdbcType=VARCHAR}, #{item.hostId,jdbcType=VARCHAR}, #{item.hostIp,jdbcType=VARCHAR},
            #{item.hostPort,jdbcType=INTEGER}, #{item.expireAt,jdbcType=TIMESTAMP}, #{item.nodeType,jdbcType=TINYINT},
            #{item.extAttrs,jdbcType=VARCHAR},  #{item.contextPath,jdbcType=VARCHAR},  #{item.createDt,jdbcType=TIMESTAMP})
        </foreach>
        ON CONFLICT (host_id, host_ip) DO UPDATE SET expire_at = EXCLUDED.expire_at

    </insert>
    <select id="countActivePod"
            resultType="com.aizuda.easy.retry.template.datasource.persistence.dataobject.ActivePodQuantityResponseDO">
        SELECT node_type as nodeType, count(*) as total
        from server_node
        ${ew.customSqlSegment}
    </select>
</mapper>
